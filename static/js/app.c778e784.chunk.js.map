{"version":3,"sources":["assets/icons/faceMask.png","assets/icons/handSanitizer.png","assets/icons/gloves.png","assets/icons/compass.png","components/web/maps/Marker.tsx","components/web/maps/Polyline.tsx","components/web/maps/Callout.tsx","components/web/maps/index.tsx","components/web/select/index.tsx","api/index.ts","context/LoginContext.tsx","hooks/useLogin.tsx","styles/palette.ts","styles/icons.ts","components/utils.ts","components/StockBar.tsx","components/MapScreen.tsx","storage/index.ts","components/LoginScreen.tsx","components/SignupScreen.tsx","App.tsx","web-build/register-service-worker.js"],"names":["module","exports","MapViewMarker","this","props","description","title","coordinate","children","onPress","rest","pinColor","onClick","position","lat","latitude","lng","longitude","icon","url","Component","MapViewPolyline","MapViewCallout","TouchableOpacity","onCloseClick","hideCallout","GoogleMapContainer","withGoogleMap","ref","handleMapMounted","MapView","state","center","map","onMapReady","onDragEnd","onRegionChangeComplete","getCenter","coordinates","setState","region","initialRegion","onRegionChange","options","style","styles","container","centerProps","defaultCenter","View","containerElement","height","mapElement","onDragStart","onIdle","defaultZoom","fullscreenControl","mapTypeControl","zoomControlOptions","google","maps","ControlPosition","LEFT_BOTTOM","Marker","Polyline","Callout","StyleSheet","create","SearchableDropdown","containerStyle","items","onItemSelect","textInputProps","inputHeight","label","name","value","overflow","isClearable","optionHeight","theme","borderRadius","colors","primary25","primary","spacing","controlHeight","menuGlutter","provided","fontSize","border","fontFamily","control","minHeight","zIndex","menu","isSearchable","autoFocus","placeholder","onChange","qs","require","BASE_API_URL","ENDPOINTS","HOSPITALS","USERS","LOGIN","VOTE","PRODUCTS","PROVINCES","USER_PHARMACY","PHARMACY_STOCK","PHARMACIES","getProducts","a","async","fetch","method","headers","getRequestsHeaders","then","requestToJson","getProvinces","getPharmacies","queryParams","query","stringify","token","Authorization","undefined","res","json","response","error","Error","createContext","user","email","hospitalId","setUser","logout","useLogin","useContext","LoginContext","STATUS_PALETTE","ICONS","mask","handSanitizer","gloves","compass","showAlert","isMobile","Platform","OS","args","Alert","alert","join","StockBar","useState","pharmacy","setPharmacy","products","setProducts","reportStock","product","hasStock","some","p","id","productId","stock","payload","fetchOptions","body","JSON","updatePharmacyStock","catch","e","String","useEffect","data","itemsContainer","idx","key","productButton","backgroundColor","photo","Image","productButtonImg","source","accessibilityLabel","Text","productButtonText","stats","lastUpdate","time","Date","constructor","getTime","time_formats","seconds","list_choice","Math","abs","format","i","floor","timeAgo","updatedAt","display","flexDirection","justifyContent","padding","flexWrap","alignItems","marginRight","marginBottom","color","width","tabText","tabSlider","flex","paddingHorizontal","textAlign","capacity","textTransform","capacityValue","capacityLabel","CALLOUT_MAXWIDTH","round","Dimensions","get","MapScreen","navigation","provinceItems","setProvinceItems","loading","setLoading","pharmacies","setPharmacies","city","setCity","setLocation","currentProduct","setCurrentProduct","currentMarker","setCurrentMarker","mapRef","useRef","isLoggedIn","Boolean","showStatusBar","moveToLocation","Location","status","console","warn","accuracy","BestForNavigation","location","coords","current","animateToRegion","latitudeDelta","longitudeDelta","isProductAvailable","item","productIds","areas","displayCurrentLocationButton","provider","showsUserLocation","showsMyLocationButton","showsCompass","tracksViewChanges","parseFloat","geometryLat","geometryLng","address","isCalloutVisible","Linking","canOpenURL","supported","openURL","handleGMapsLink","encodeURI","generateGMapsURL","callout","imageArea","logoArea","productsImageCallout","textAreaStyle","select","provincesSelector","itemStyle","dropdownItem","itemsContainerStyle","formInput","listProps","nestedScrollEnabled","loginButton","navigate","bottomBar","positionButton","productsButton","bottom","index","findIndex","length","productsButtonImage","loadingContainer","ActivityIndicator","alignContent","paddingVertical","right","top","left","maxWidth","maxHeight","marginTop","borderBottomWidth","borderBottomColor","opacity","ios","android","web","KEYS","LoginScreen","setEmail","password","setPassword","formTitle","TextInput","autoCompleteType","keyboardType","textContentType","onChangeText","defaultValue","autoCapitalize","secureTextEntry","formLink","loginUser","AsyncStorage","setItem","alignSelf","textDecorationLine","borderColor","borderWidth","SignupScreen","pharmacyItems","setPharmacyItems","setName","centerCode","setCenterCode","formSubtitle","searchInput","disabled","validate","pharmacyId","createPharmacyUser","text","cancelable","Stack","createStackNavigator","App","getItem","parse","DefaultTheme","background","card","Provider","removeItem","NavigationContainer","Navigator","Screen","component","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.c778e784.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/faceMask.20888871.png\";","module.exports = __webpack_public_path__ + \"static/media/handSanitizer.ce9c49cf.png\";","module.exports = __webpack_public_path__ + \"static/media/gloves.2767eaf0.png\";","module.exports = __webpack_public_path__ + \"static/media/compass.971d8ea6.png\";","import React, { Component } from 'react';\nimport { Marker } from 'react-google-maps';\n\nclass MapViewMarker extends Component {\n  render() {\n    const {\n      description,\n      title,\n      coordinate,\n      children,\n      onPress,\n      pinColor,\n      ...rest\n    } = this.props;\n    const iconUrl = `http://maps.google.com/mapfiles/ms/icons/${pinColor}-dot.png`;\n\n    return (\n      <Marker\n        {...rest}\n        onClick={onPress}\n        title={description ? `${title}\\n${description}` : title}\n        position={{ lat: coordinate.latitude, lng: coordinate.longitude }}\n        icon={url}>\n        {children}\n      </Marker>\n    );\n  }\n}\n\nexport default MapViewMarker;\n","import React, { Component } from \"react\";\nimport { Polyline } from \"react-google-maps\";\n\nclass MapViewPolyline extends Component {\n  render() {\n    return <Polyline {...this.props} />;\n  }\n}\n\nexport default MapViewPolyline;\n","import React, { Component } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { InfoWindow } from 'react-google-maps';\n\nclass MapViewCallout extends Component {\n  render() {\n    const { onPress, ...rest } = this.props;\n    return (\n      <TouchableOpacity onPress={onPress}>\n        <InfoWindow onCloseClick={this.props.hideCallout} {...rest}>\n          {this.props.children}\n        </InfoWindow>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default MapViewCallout;","import React, { Component } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport Marker from \"./Marker\";\nimport Polyline from \"./Polyline\";\nimport Callout from \"./Callout\";\n\nconst GoogleMapContainer = withGoogleMap((props) => (\n  <GoogleMap {...props} ref={props.handleMapMounted} />\n));\n\nclass MapView extends Component {\n  state = {\n    center: null,\n  };\n\n  handleMapMounted = (map) => {\n    this.map = map;\n    this.props.onMapReady && this.props.onMapReady();\n  };\n\n  animateToRegion(coordinates) {\n    this.setState({\n      center: { lat: coordinates.latitude, lng: coordinates.longitude },\n    });\n  }\n\n  onDragEnd = () => {\n    const { onRegionChangeComplete } = this.props;\n    if (this.map && onRegionChangeComplete) {\n      const center = this.map.getCenter();\n      onRegionChangeComplete({\n        latitude: center.lat(),\n        longitude: center.lng(),\n      });\n    }\n  };\n\n  render() {\n    const {\n      region,\n      initialRegion,\n      onRegionChange,\n      onPress,\n      options,\n    } = this.props;\n    const { center } = this.state;\n    const style = this.props.style || styles.container;\n\n    const centerProps = region\n      ? {\n          center: {\n            lat: region.latitude,\n            lng: region.longitude,\n          },\n        }\n      : center\n      ? { center }\n      : {\n          defaultCenter: {\n            lat: initialRegion && initialRegion.latitude,\n            lng: initialRegion && initialRegion.longitude,\n          },\n        };\n\n    return (\n      <View style={style}>\n        <GoogleMapContainer\n          handleMapMounted={this.handleMapMounted}\n          containerElement={<div style={{ height: \"100%\" }} />}\n          mapElement={<div style={{ height: \"100%\" }} />}\n          {...centerProps}\n          onDragStart={onRegionChange}\n          onIdle={this.onDragEnd}\n          defaultZoom={15}\n          onClick={onPress}\n          options={{\n            fullscreenControl: false,\n            mapTypeControl: false,\n            zoomControlOptions: {\n              position: google.maps.ControlPosition.LEFT_BOTTOM\n          },\n            ...options\n          }}\n        >\n          {this.props.children}\n        </GoogleMapContainer>\n      </View>\n    );\n  }\n}\n\nMapView.Marker = Marker;\nMapView.Polyline = Polyline;\nMapView.Callout = Callout;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n  },\n});\n\nexport default MapView;\nexport {default as Marker} from './Marker';\nexport {default as Callout} from './Callout';","import React from 'react';\nimport { Select } from 'react-select-virtualized';\nimport { View } from 'react-native';\n\nexport default function SearchableDropdown({\n  containerStyle,\n  items,\n  onItemSelect,\n  textInputProps,\n  inputHeight,\n}) {\n  const options = items.map(({ name, value }) => ({ label: name, value }));\n\n  return (\n    <View style={[containerStyle, { overflow: 'visible' }]}>\n      <Select\n        isClearable={false}\n        optionHeight={36}\n        theme={(theme) => {\n          return {\n            ...theme,\n            borderRadius: 10,\n            colors: {\n              ...theme.colors,\n              primary25: '#4C9AFF',\n              primary: '#4C9AFF',\n            },\n            spacing: {\n              ...theme.spacing,\n              controlHeight: inputHeight,\n              menuGlutter: 0,\n            },\n          };\n        }}\n        styles={{\n          container: (provided, state) => ({\n            ...provided,\n            fontSize: 14,\n            border: 'none',\n            fontFamily: `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Ubuntu, \"Helvetica Neue\", sans-serif`,\n          }),\n          control: (provided, state) => ({\n            ...provided,\n            border: 'none',\n            minHeight: inputHeight,\n            zIndex: 0,\n          }),\n          menu: (provided, state) => ({\n            ...provided,\n            zIndex: 9999,\n          }),\n        }}\n        isSearchable\n        autoFocus\n        name=\"city\"\n        placeholder={textInputProps && textInputProps.placeholder}\n        options={options}\n        onChange={({ label, value }) => onItemSelect({ name: label, value })}\n      />\n    </View>\n  );\n}\n","const qs = require(\"qs\");\n// export const BASE_API_URL = \"http://192.168.1.51:3000\";\n//export const BASE_API_URL = 'http://192.168.1.42:3000';\n// export const BASE_API_URL = \"http://localhost:3000\";\nexport const BASE_API_URL = \"https://covid-19-hospital-finder.herokuapp.com\";\n\nexport const ENDPOINTS = {\n  HOSPITALS: `${BASE_API_URL}/hospitals`,\n  USERS: `${BASE_API_URL}/users`,\n  LOGIN: `${BASE_API_URL}/login`,\n  VOTE: `${BASE_API_URL}/score`,\n  PRODUCTS: `${BASE_API_URL}/products`,\n  PROVINCES: `${BASE_API_URL}/provinces/areas`,\n  USER_PHARMACY: `${BASE_API_URL}/user/pharmacy`,\n  PHARMACY_STOCK: `${BASE_API_URL}/user/pharmacy/stock`,\n  PHARMACIES: `${BASE_API_URL}/pharmacies`,\n};\n\nexport async function getProducts() {\n  return fetch(ENDPOINTS.PRODUCTS, {\n    method: 'GET',\n    headers: getRequestsHeaders(),\n  }).then(requestToJson);\n}\n\nexport async function getProvinces() {\n  return fetch(ENDPOINTS.PROVINCES, {\n    method: \"GET\",\n    headers: getRequestsHeaders(),\n  }).then(requestToJson);\n}\n\nexport async function getPharmacies(queryParams) {\n  const query = qs.stringify(queryParams);\n\n  return fetch(`${ENDPOINTS.PHARMACIES}?${query}`, {\n    method: 'GET',\n    headers: getRequestsHeaders(),\n  }).then(requestToJson);\n}\n\nexport async function getHospitals() {\n  return fetch(ENDPOINTS.HOSPITALS, {\n    method: 'GET',\n    headers: getRequestsHeaders(),\n  }).then(requestToJson);\n}\n\nexport async function getPharmacy(token) {\n  return fetch(ENDPOINTS.USER_PHARMACY, {\n    method: 'GET',\n    headers: getRequestsHeaders(token),\n  }).then(requestToJson);\n}\n\nexport async function updatePharmacyStock(token, productId, stock) {\n  const payload = {\n    productId,\n    stock,\n  };\n  const fetchOptions = {\n    method: 'PUT',\n    headers: getRequestsHeaders(token),\n    body: JSON.stringify(payload),\n  };\n\n  return fetch(ENDPOINTS.PHARMACY_STOCK, fetchOptions).then(requestToJson);\n}\n\nexport async function getHospital(id) {\n  return fetch(`${ENDPOINTS.HOSPITALS}/${id}`, {\n    method: 'GET',\n    headers: getRequestsHeaders(),\n  }).then(requestToJson);\n}\n\nexport async function createUser(user) {\n  const payload = {\n    name: user.name,\n    email: user.email,\n    password: user.password,\n    role: user.role,\n    hospitalId: user.hospitalId,\n  };\n\n  return fetch(ENDPOINTS.USERS, {\n    method: 'POST',\n    headers: getRequestsHeaders(),\n    body: JSON.stringify(payload),\n  }).then(requestToJson);\n}\n\nexport async function createPharmacyUser(user) {\n  const payload = {\n    name: user.name,\n    email: user.email,\n    password: user.password,\n    centerCode: user.centerCode,\n    pharmacyId: user.pharmacyId,\n  };\n\n  return fetch(ENDPOINTS.USER_PHARMACY, {\n    method: 'POST',\n    headers: getRequestsHeaders(),\n    body: JSON.stringify(payload),\n  }).then(requestToJson);\n}\n\nexport async function login(user, password) {\n  const payload = {\n    email: user,\n    password: password,\n  };\n  const fetchOptions = {\n    method: 'POST',\n    headers: getRequestsHeaders(),\n    body: JSON.stringify(payload),\n  };\n\n  return fetch(ENDPOINTS.LOGIN, fetchOptions).then((data) => {\n    return data.json();\n  });\n}\n\nexport async function vote(user, score) {\n  const payload = {\n    hospitalId: user.hospitalId,\n    userId: user.id,\n    score,\n  };\n  const fetchOptions = {\n    method: 'POST',\n    headers: getRequestsHeaders(user.token),\n    body: JSON.stringify(payload),\n  };\n\n  return fetch(ENDPOINTS.VOTE, fetchOptions).then(requestToJson);\n}\n\nexport function getRequestsHeaders(token = null) {\n  return {\n    'Content-Type': 'application/json',\n    Authorization: token ? `Bearer ${token}` : undefined,\n  };\n}\n\nexport async function requestToJson(res) {\n  const response = await res.json();\n  if (response.error) {\n    throw Error(response.error);\n  }\n  return response;\n}\n","import { createContext } from 'react';\nimport { AsyncStorage } from 'react-native';\nimport { KEYS } from '../storage';\n\nconst defaultUser = { email: '', name: '', hospitalId: 0 };\n\nexport default createContext({\n  user: defaultUser,\n  setUser: (user) => user,\n  logout: () => null,\n});\n","import { useContext } from \"react\";\nimport LoginContext from \"../context/LoginContext\";\n\nfunction useLogin() {\n  return useContext(LoginContext);\n}\n\nexport default useLogin;\n","export const STATUS_PALETTE = [\n  \"#cc3232\",\n  \"#db7b2b\",\n  \"#e7b416\",\n  \"#99c140\",\n  \"#2dc937\",\n];\n\nexport const STATUS_EMOJIS = [\n  \"weary\",\n  \"slightly_frowning_face\",\n  \"neutral_face\",\n  \"slightly_smiling_face\",\n  \"grin\",\n];\n\nexport const STATUS_MARKER_PALETTE = [\n    \"red\", \"orange\", \"gold\", \"yellow\", \"green\"\n]","import mask from '../assets/icons/faceMask.png';\nimport handSanitizer from '../assets/icons/handSanitizer.png';\nimport gloves from '../assets/icons/gloves.png';\nimport compass from '../assets/icons/compass.png';\n\nexport const ICONS = {\n  mask,\n  handSanitizer,\n  gloves,\n  compass,\n};\n","import { Platform, Alert } from \"react-native\";\n\nexport function timeAgo(time) {\n  switch (typeof time) {\n    case \"number\":\n      break;\n    case \"string\":\n      time = +new Date(time);\n      break;\n    case \"object\":\n      if (time.constructor === Date) time = time.getTime();\n      break;\n    default:\n      time = +new Date();\n  }\n  const time_formats = [\n    [60, \"segundos\", 1], // 60\n    [120, \"minuto\", 60], // 60*2\n    [3600, \"minutos\", 60], // 60*60, 60\n    [7200, \"hora\", 3600], // 60*60*2\n    [86400, \"horas\", 3600], // 60*60*24, 60*60\n    [172800, \"ayer\", \"hoy\"], // 60*60*24*2\n    [604800, \"dias\", 86400], // 60*60*24*7, 60*60*24\n    [1209600, \"última semana\", \"próxima semana\"], // 60*60*24*7*4*2\n    [2419200, \"semanas\", 604800], // 60*60*24*7*4, 60*60*24*7\n    [4838400, \"último mes\", \"próximo mes\"], // 60*60*24*7*4*2\n    [29030400, \"meses\", 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n    [58060800, \"último año\", \"próximo year\"], // 60*60*24*7*4*12*2\n    [2903040000, \"años\", 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n    [5806080000, \"último centenario\", \"próximo centenario\"], // 60*60*24*7*4*12*100*2\n    [58060800000, \"centenarios\", 2903040000], // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n  ];\n  let seconds = (+new Date() - time) / 1000,\n    token = \"hace \",\n    list_choice = 1;\n\n  if (seconds < 1) {\n    return \"justo ahora\";\n  }\n  if (seconds < 0) {\n    seconds = Math.abs(seconds);\n    token = \"siguientes\";\n    list_choice = 2;\n  }\n  let i = 0,\n    format;\n  while ((format = time_formats[i++]))\n    if (seconds < format[0]) {\n      if (typeof format[2] == \"string\") return format[list_choice];\n      else\n        return token + Math.floor(seconds / format[2]) + \" \" + format[1] + \" \";\n    }\n  return time;\n}\n\nexport function showAlert(...args) {\n  const isMobile = Platform.OS !== \"web\";\n  return isMobile ? Alert.alert(...args) : alert(args.join(\"\\n\\n\"));\n}\n","import \"react-native-gesture-handler\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Text,\n  Image\n} from \"react-native\";\nimport { updatePharmacyStock, getPharmacy, getProducts } from \"../api\";\nimport useLogin from \"../hooks/useLogin\";\nimport { STATUS_PALETTE } from \"../styles/palette\";\nimport { ICONS } from \"../styles/icons\";\nimport { timeAgo } from \"./utils\";\nimport { showAlert } from './utils'\n\nexport default function StockBar({ style }) {\n  const { user } = useLogin();\n  const [pharmacy, setPharmacy] = useState(null);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    getPharmacy(user.token).then((data) => {\n      setPharmacy(data);\n    });\n    getProducts().then(setProducts);\n  }, []);\n\n  function reportStock(product) {\n    const hasStock = pharmacy.products.some((p) => p.id === product.id);\n\n    updatePharmacyStock(user.token, product.id, !hasStock)\n      .then(setPharmacy)\n      .catch((e) => showAlert(\"Error actualizando el stock\", String(e)));\n  }\n\n  function renderProducts() {\n    return products.map((product, idx) => {\n      const hasStock = pharmacy.products.some((p) => p.id === product.id);\n      return (\n        <TouchableOpacity\n          key={product.id}\n          onPress={() => reportStock(product)}\n          style={[\n            styles.productButton,\n            {\n              backgroundColor: hasStock ? STATUS_PALETTE[4] : STATUS_PALETTE[0],\n            },\n          ]}\n        >\n          {ICONS[product.photo] ? (\n            <Image\n              style={styles.productButtonImg}\n              source={ICONS[product.photo]}\n              accessibilityLabel={product.name}\n            />\n          ) : (\n            <Text style={styles.productButtonText}>{product.name}</Text>\n          )}\n        </TouchableOpacity>\n      );\n    });\n  }\n\n  function renderStats() {\n    return (\n      <View style={styles.stats}>\n        <Text style={styles.lastUpdate}>{`Actualizaste el inventario ${timeAgo(\n          new Date(pharmacy.updatedAt)\n        )}`}</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={styles.itemsContainer}>{pharmacy && renderProducts()}</View>\n      {pharmacy && renderStats()}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n  },\n  itemsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"50%\",\n    justifyContent: \"space-between\",\n    padding: 16,\n    flexWrap: \"wrap\",\n  },\n  productButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginRight: 4,\n    marginBottom: 4,\n    padding: 8,\n  },\n  productButtonText: {\n    color: \"white\",\n  },\n  productButtonImg: {\n    width: 48,\n    height: 48,\n  },\n  tabText: {\n    fontSize: 24,\n  },\n  tabSlider: {\n    padding: 8,\n  },\n  stats: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: 8,\n    alignItems: \"center\",\n  },\n  lastUpdate: {\n    flex: 1,\n    paddingHorizontal: 16,\n    width: \"50%\",\n    textAlign: \"right\",\n    color: \"gray\",\n    fontSize: 12,\n  },\n  capacity: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    flex: 1,\n    textTransform: \"uppercase\",\n    width: \"50%\",\n    textAlign: \"center\",\n    fontSize: 40,\n  },\n  capacityValue: {\n    fontSize: 40,\n    marginRight: 8,\n  },\n  capacityLabel: {\n    fontSize: 12,\n  },\n});\n","import 'react-native-gesture-handler';\nimport React, { useState, useEffect, useRef } from 'react';\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Text,\n  ActivityIndicator,\n  Image,\n  Dimensions,\n  Platform,\n} from 'react-native';\nimport * as Location from 'expo-location';\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport SearchableDropdown from 'react-native-searchable-dropdown';\nimport {\n  getPharmacies,\n  getProvinces,\n  getProducts,\n} from '../api';\nimport useLogin from '../hooks/useLogin';\nimport StockBar from './StockBar';\nimport { ICONS } from '../styles/icons';\nimport { STATUS_PALETTE } from '../styles/palette';\nimport { Linking } from 'expo';\n\nconst DEFAULT_LATITUDE_DELTA = 0.026006060443698686;\nconst DEFAULT_LONGITUDE_DELTA = 0.017766952514648438;\nconst WIDTH = Math.round(Dimensions.get('window').width);\nconst CALLOUT_MAXWIDTH = 0.5 * WIDTH;\n\nexport default function MapScreen({ navigation }) {\n  const [provinceItems, setProvinceItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pharmacies, setPharmacies] = useState([]);\n  const [city, setCity] = useState();\n  const [location, setLocation] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [currentProduct, setCurrentProduct] = useState(null);\n  const [currentMarker, setCurrentMarker] = useState();\n  const { user, logout } = useLogin();\n  const mapRef = useRef(null);\n  const isLoggedIn = Boolean(user && user.email);\n  const showStatusBar = isLoggedIn;\n\n  async function moveToLocation() {\n    setLoading(true)\n    const { status } = await Location.requestPermissionsAsync();\n    if (status !== 'granted') {\n      console.warn('Permission to access location was denied');\n    }\n\n    const location = await Location.getCurrentPositionAsync({\n      accuracy: Location.Accuracy.BestForNavigation,\n    });\n\n    setLocation(location.coords);\n    mapRef.current.animateToRegion({\n      latitude: location.coords.latitude,\n      latitudeDelta: DEFAULT_LATITUDE_DELTA,\n      longitude: location.coords.longitude,\n      longitudeDelta: DEFAULT_LONGITUDE_DELTA,\n    });\n    setLoading(false)\n  }\n\n  const handleGMapsLink = (url) => {\n    setLoading(true);\n    Linking.canOpenURL(url).then((supported) => {\n      if (supported) {\n        Linking.openURL(url).then(() => setLoading(false));\n      }\n    });\n  };\n\n  function generateGMapsURL(pharmacy) {\n    return encodeURI(\n      `https://www.google.com/maps/search/?api=1&query=${pharmacy.address},${pharmacy.areas}`\n    );\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getProvinces()\n      .then((data) => {\n        const items = data.map((city) => ({\n          value: city,\n          name: city,\n        }));\n        setProvinceItems(items);\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.error(e);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (city) {\n      setLoading(true);\n      getPharmacies({ areas: city })\n        .then((data) => {\n          setPharmacies(data);\n          setLoading(false);\n        })\n        .catch((e) => {\n          console.error(e);\n          setLoading(false);\n        });\n    }\n  }, [city]);\n\n  useEffect(() => {\n    setLoading(true);\n    getProducts().then((products) => {\n      setProducts(products);\n      setCurrentProduct(products[0]);\n      setLoading(false);\n    });\n  }, []);\n\n  function handleProductsButtonClick() {\n    const index = products.findIndex((product) => {\n      return product.id === currentProduct.id;\n    });\n    if (index === products.length - 1) {\n      setCurrentProduct(products[0]);\n    } else {\n      setCurrentProduct(products[index + 1]);\n    }\n  }\n\n  function renderLogin() {\n    return isLoggedIn ? (\n      <TouchableOpacity style={styles.loginButton} onPress={logout}>\n        <Text>Cerrar sesión</Text>\n      </TouchableOpacity>\n    ) : (\n      <TouchableOpacity\n        style={styles.loginButton}\n        onPress={() => navigation.navigate('Login')}>\n        <Text>Entrar</Text>\n      </TouchableOpacity>\n    );\n  }\n\n  function pinColor(pharmacy) {\n    const hasStock = pharmacy.products.some((product) => {\n      return product.id === currentProduct.id;\n    });\n    return hasStock ? 'green' : 'red';\n  }\n\n  function isProductAvailable(pharmacy, item) {\n    const productIds = pharmacy.products.map((product) => product.id);\n    return productIds && productIds.some((id) => id === item.id);\n  }\n\n  const isCalloutVisible = (pharmacy) =>\n    Platform.OS !== 'web' || currentMarker === pharmacy.id;\n  const displayCurrentLocationButton = Platform.OS === 'web';\n\n  return (\n    <View style={styles.container}>\n      <MapView\n        ref={mapRef}\n        style={[styles.map, { height: showStatusBar ? '80%' : '100%' }]}\n        provider={'google'}\n        showsUserLocation\n        showsMyLocationButton\n        showsCompass\n        onMapReady={moveToLocation}>\n        {pharmacies.map((pharmacy) => {\n          return (\n            <Marker\n              key={pharmacy.id}\n              tracksViewChanges={false}\n              coordinate={{\n                latitude: parseFloat(pharmacy.geometryLat),\n                longitude: parseFloat(pharmacy.geometryLng),\n              }}\n              title={pharmacy.name}\n              description={pharmacy.address}\n              pinColor={pinColor(pharmacy)}\n              onPress={() => setCurrentMarker(pharmacy.id)}>\n              {isCalloutVisible(pharmacy) && (\n                <Callout\n                  onPress={() => handleGMapsLink(generateGMapsURL(pharmacy))}>\n                  <View style={styles.callout}>\n                    <View style={styles.imageArea}>\n                      {products.map((product) => {\n                        return (\n                          <View\n                            key={product.id}\n                            style={[\n                              styles.logoArea,\n                              {\n                                backgroundColor: isProductAvailable(\n                                  pharmacy,\n                                  product\n                                )\n                                  ? STATUS_PALETTE[4]\n                                  : STATUS_PALETTE[0],\n                              },\n                            ]}>\n                            <Image\n                              key={product.id}\n                              source={ICONS[product.photo]}\n                              style={styles.productsImageCallout}\n                            />\n                          </View>\n                        );\n                      })}\n                    </View>\n                    <View style={styles.textAreaStyle}>\n                      <Text\n                        style={{\n                          textTransform: 'capitalize',\n                        }}>{`Farmacia ${pharmacy.name}`}</Text>\n                      <Text style={{ color: 'blue' }}>Cómo llegar</Text>\n                    </View>\n                  </View>\n                </Callout>\n              )}\n            </Marker>\n          );\n        })}\n      </MapView>\n      <SearchableDropdown\n        select\n        inputHeight={36}\n        onItemSelect={(item) => setCity(item.value)}\n        containerStyle={styles.provincesSelector}\n        itemStyle={styles.dropdownItem}\n        itemsContainerStyle={styles.itemsContainer}\n        items={provinceItems}\n        textInputProps={{\n          placeholder: 'Selecciona tu ciudad',\n          style: styles.formInput,\n        }}\n        listProps={{\n          nestedScrollEnabled: true,\n        }}\n      />\n      {renderLogin()}\n      {showStatusBar && <StockBar style={styles.bottomBar} />}\n      {displayCurrentLocationButton && (\n        <TouchableOpacity\n          style={styles.positionButton}\n          onPress={() => {\n            moveToLocation();\n          }}>\n          <Image source={ICONS.compass} style={{ height: 40, width: 40 }} />\n        </TouchableOpacity>\n      )}\n      <TouchableOpacity\n        style={[\n          styles.productsButton,\n          { bottom: !showStatusBar ? styles.productsButton.bottom : '30%' },\n        ]}\n        onPress={handleProductsButtonClick}>\n        {currentProduct && (\n          <Image\n            source={ICONS[currentProduct.photo]}\n            style={styles.productsButtonImage}\n          />\n        )}\n      </TouchableOpacity>\n      {loading && (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator />\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    height: '100%',\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: '#F5F5F5',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  map: {\n    width: '100%',\n    height: '100%',\n  },\n  loginButton: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    alignContent: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    right: 24,\n    top: 24,\n    height: 36,\n  },\n  provincesSelector: {\n    position: 'absolute',\n    left: 22,\n    top: 24,\n    width: 200,\n    maxWidth: 250,\n    maxHeight: 400,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    alignContent: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: 'transparent',\n  },\n  itemsContainer: {\n    maxHeight: 140,\n    borderRadius: 10,\n  },\n  formInput: {\n    width: '100%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  bottomBar: {\n    height: '20%',\n    maxHeight: '20%',\n    overflow: 'hidden',\n    width: '100%',\n  },\n  loadingContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    opacity: 0.5,\n  },\n  productsButton: {\n    position: 'absolute',\n    ...Platform.select({\n      ios: {\n        bottom: '15%',\n      },\n      android: {\n        bottom: '8%',\n      },\n      web: {\n        bottom: '10%',\n        backgroundColor: 'red',\n      },\n    }),\n    right: '2.5%',\n    backgroundColor: 'rgb(0, 150, 135)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderRadius: 50,\n    padding: 4,\n  },\n  productsButtonImage: {\n    width: 48,\n    height: 48,\n  },\n  callout: {\n    padding: 4,\n    display: 'flex',\n    justifyContent: 'center',\n    maxWidth: CALLOUT_MAXWIDTH,\n  },\n  imageArea: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 4,\n  },\n  logoArea: {\n    borderRadius: 50,\n    padding: 4,\n    marginRight: 4,\n  },\n  textAreaStyle: {\n    padding: 4,\n    marginBottom: 6,\n  },\n  productsImageCallout: {\n    width: 32,\n    height: 32,\n  },\n  positionButton: {\n    display: 'flex',\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 4,\n    position: 'absolute',\n    right: '1%',\n    bottom: '12%',\n  },\n});\n","export const KEYS = {\n  USER: \"user\",\n};\n","import 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport {\n  AsyncStorage,\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Text,\n  TextInput\n} from 'react-native';\nimport { login as loginUser } from '../api';\nimport { KEYS } from '../storage';\nimport useLogin from '../hooks/useLogin';\nimport { showAlert } from './utils'\n\nexport default function LoginScreen({ navigation }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { setUser } = useLogin();\n\n  function login() {\n    loginUser(email, password)\n      .then((user) =>\n        AsyncStorage.setItem(KEYS.USER, JSON.stringify(user)).then(() => user)\n      )\n      .then((user) => {\n        if (user && user.token) {\n          showAlert(\n            `Hola de nuevo, ${user.name},\n              Nunca podremos agradecer suficiente lo que estás haciendo durante esta crisis por nosotros. \\n\\n ¡Venceremos al virus!`\n          );\n          setUser(user);\n          navigation.navigate('Inicio');\n        } else {\n          throw new Error(\n            `The token is missing in the user information ${JSON.stringify(\n              user\n            )}`\n          );\n        }\n      })\n      .catch((e) => {\n        console.warn(e);\n        showAlert(\n          `Fallo al iniciar sesión:\\n\\n Los credenciales son erróneos o el usuario está pendiente de validación`\n        );\n      });\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.formTitle}>Acceso a personal de farmacia</Text>\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Email\"\n        autoCompleteType=\"email\"\n        keyboardType=\"email-address\"\n        textContentType=\"emailAddress\"\n        onChangeText={(email) => setEmail(email)}\n        defaultValue={email}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Contraseña\"\n        autoCompleteType=\"password\"\n        textContentType=\"password\"\n        secureTextEntry\n        onChangeText={(password) => setPassword(password)}\n        defaultValue={password}\n        autoCapitalize=\"none\"\n      />\n      <Text\n        style={styles.formLink}\n        onPress={() => navigation.navigate('Registro')}>\n        Tengo una farmacia y no tengo cuenta, ¿Cómo me registro?\n      </Text>\n      <TouchableOpacity style={styles.loginButton} onPress={login}>\n        <Text>Login</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignSelf: 'center',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5F5F5',\n    paddingHorizontal: 48,\n  },\n  formTitle: {\n    fontSize: 24,\n    marginBottom: 32,\n  },\n  formInput: {\n    width: '100%',\n    height: 48,\n    marginBottom: 16,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  formLink: {\n    textDecorationLine: 'underline',\n    marginBottom: 16,\n  },\n  loginButton: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    borderColor: '#F5F5F5',\n    borderWidth: 1,\n    alignContent: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n","import 'react-native-gesture-handler';\nimport React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Text,\n  TextInput,\n} from 'react-native';\nimport SearchableDropdown from 'react-native-searchable-dropdown';\nimport { getProvinces, createPharmacyUser, getPharmacies } from '../api';\nimport { showAlert } from './utils'\n\nexport default function SignupScreen({ navigation }) {\n  const [provinceItems, setProvinceItems] = useState([]);\n  const [pharmacyItems, setPharmacyItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [city, setCity] = useState(null);\n  const [pharmacy, setPharmacy] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [centerCode, setCenterCode] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    getProvinces()\n      .then((data) => {\n        const items = data.map((city) => ({\n          value: city,\n          name: city,\n        }));\n        setProvinceItems(items);\n        setLoading(false);\n      })\n      .catch((e) => {\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (city) {\n      setLoading(true);\n      getPharmacies({ areas: city })\n        .then((data) => {\n          const items = data.map((pharmacy) => ({\n            value: pharmacy.id,\n            name: pharmacy.name,\n          }));\n          setPharmacyItems(items);\n          setLoading(false);\n        })\n        .catch((e) => {\n          setLoading(false);\n        });\n    }\n  }, [city]);\n\n  function validate() {\n    if (!pharmacy) {\n      showAlert(\n        'Los datos no son válidos',\n        'Por favor, selecciona tu farmacia'\n      );\n      return;\n    }\n    if (!centerCode) {\n      showAlert(\n        'Los datos no son válidos',\n        'Por favor, introduce el código autonómico de la farmacia'\n      );\n      return;\n    }\n    if (!name) {\n      showAlert(\n        'Los datos no son validos',\n        'Por favor, introduce tu nombre y tus apellidos'\n      );\n      return;\n    }\n    if (!email) {\n      showAlert('Los datos no son válidos', 'Por favor, introduce un email');\n      return;\n    }\n    if (!password) {\n      showAlert(\n        'Los datos no son válidos',\n        'Por favor, introduce una contraseña'\n      );\n      return;\n    }\n    return true;\n  }\n  function submitUser() {\n    if (!validate()) {\n      return;\n    }\n\n    createPharmacyUser({\n      name,\n      email,\n      password,\n      centerCode,\n      pharmacyId: pharmacy,\n    })\n      .then((user) => {\n        showAlert(\n          'Enviado correctamente',\n          `Gracias ${user.name}. Ya puedes iniciar sesión y actualizar el inventario de tu farmacia.`,\n          [\n            {\n              text: 'Aceptar',\n              onPress: () => {\n                navigation.navigate('Login');\n              },\n            },\n          ],\n          { cancelable: false }\n        );\n      })\n      .catch((e) => {\n        showAlert('Ha ocurrido un error', String(e));\n      });\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.formTitle}>\n        Pedir acceso como personal de farmacia\n      </Text>\n      <Text style={styles.formSubtitle}>\n        Por el momento, solo un usuario por farmacia podrá informar del\n        inventario de productos.\n      </Text>\n      <SearchableDropdown\n        select\n        inputHeight={48}\n        onItemSelect={(item) => {\n          setCity(item.value);\n        }}\n        containerStyle={styles.searchInput}\n        itemStyle={styles.dropdownItem}\n        itemsContainerStyle={styles.itemsContainer}\n        items={provinceItems}\n        textInputProps={{\n          placeholder: loading ? 'Cargando...' : 'Selecciona una ciudad',\n          style: styles.formInput,\n        }}\n        listProps={{\n          nestedScrollEnabled: true,\n        }}\n      />\n      <SearchableDropdown\n        select\n        inputHeight={48}\n        disabled={!city}\n        onItemSelect={(item) => {\n          setPharmacy(item.value);\n        }}\n        containerStyle={styles.searchInput}\n        itemStyle={styles.dropdownItem}\n        itemsContainerStyle={styles.itemsContainer}\n        items={pharmacyItems}\n        textInputProps={{\n          placeholder: loading ? 'Cargando...' : 'Selecciona tu farmacia',\n          style: styles.formInput,\n        }}\n        listProps={{\n          nestedScrollEnabled: true,\n        }}\n      />\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Código Autonómico Ej: F08006281\"\n        onChangeText={setCenterCode}\n        defaultValue={centerCode}\n      />\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Nombre y Apellidos\"\n        autoCompleteType=\"name\"\n        onChangeText={setName}\n        defaultValue={name}\n      />\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Email\"\n        autoCompleteType=\"email\"\n        keyboardType=\"email-address\"\n        textContentType=\"emailAddress\"\n        onChangeText={setEmail}\n        defaultValue={email}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Contraseña\"\n        autoCompleteType=\"password\"\n        textContentType=\"password\"\n        secureTextEntry\n        onChangeText={setPassword}\n        defaultValue={password}\n        autoCapitalize=\"none\"\n      />\n      <TouchableOpacity style={styles.loginButton} onPress={submitUser}>\n        <Text>Pedir acceso</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n    display: 'flex',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    padding: 48,\n    maxWidth: 600,\n    backgroundColor: '#F5F5F5',\n  },\n  formTitle: {\n    fontSize: 24,\n    marginBottom: 24,\n  },\n  formSubtitle: {\n    marginBottom: 16,\n  },\n  formInput: {\n    height: 48,\n    width: '100%',\n    marginBottom: 16,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  searchInput: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: 'transparent',\n  },\n  itemsContainer: {\n    maxHeight: 140,\n    marginTop: -14,\n    marginBottom: 8,\n    borderRadius: 10,\n    zIndex: 1,\n  },\n  formLink: {\n    textDecorationLine: 'underline',\n  },\n  loginButton: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    borderColor: '#F5F5F5',\n    borderWidth: 1,\n    alignContent: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n","import \"react-native-gesture-handler\";\nimport React, { useState, useEffect } from \"react\";\nimport { AsyncStorage, View } from \"react-native\";\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport { MapScreen, LoginScreen, SignupScreen } from \"./components\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { KEYS } from \"./storage\";\nimport LoginContext from \"./context/LoginContext\";\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [user, setUser] = useState({ email: \"\", name: \"\", hospitalId: 0 });\n\n  useEffect(() => {\n    AsyncStorage.getItem(KEYS.USER).then((value) => {\n      const user = value && JSON.parse(value);\n\n      setUser(user);\n    });\n  }, []);\n\n  function logout() {\n    AsyncStorage.removeItem(KEYS.USER).then(() =>\n      setUser({ email: \"\", name: \"\", hospitalId: 0 })\n    );\n  }\n  const theme = {\n    ...DefaultTheme,\n    colors: {\n      primary: 'rgb(255, 45, 85)',\n      background: '#F5F5F5',\n      card: 'rgb(255, 255, 255)',\n      text: 'rgb(28, 28, 30)',\n      border: 'transparent',\n    },\n  };\n  return (\n    <LoginContext.Provider value={{ user, setUser, logout }}>\n      <NavigationContainer theme={theme}>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Inicio\" component={MapScreen} />\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\n          <Stack.Screen name=\"Registro\" component={SignupScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </LoginContext.Provider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}