{"version":3,"sources":["assets/icons/faceMask.png","assets/icons/handSanitizer.png","assets/icons/gloves.png","components/web/maps/Marker.tsx","components/web/maps/Polyline.tsx","components/web/maps/Callout.tsx","components/web/maps/index.tsx","components/web/select/index.tsx","api/index.ts","context/LoginContext.tsx","hooks/useLogin.tsx","styles/palette.ts","styles/icons.ts","components/StockBar.tsx","components/utils.ts","components/MapScreen.tsx","storage/index.ts","components/LoginScreen.tsx","components/SignupScreen.tsx","App.tsx","web-build/register-service-worker.js"],"names":["module","exports","MapViewMarker","this","props","description","title","coordinate","rest","position","lat","latitude","lng","longitude","Component","MapViewPolyline","MapViewCallout","onPress","TouchableOpacity","onCloseClick","hideCallout","children","GoogleMapContainer","withGoogleMap","ref","handleMapMounted","MapView","state","center","map","onMapReady","onDragEnd","onRegionChangeComplete","getCenter","coordinates","setState","region","initialRegion","onRegionChange","options","style","styles","container","centerProps","defaultCenter","View","containerElement","height","mapElement","onDragStart","onIdle","defaultZoom","onClick","fullscreenControl","mapTypeControl","zoomControlOptions","google","maps","ControlPosition","LEFT_BOTTOM","Marker","Polyline","Callout","StyleSheet","create","SearchableDropdown","containerStyle","items","onItemSelect","textInputProps","label","name","value","overflow","isClearable","optionHeight","theme","borderRadius","colors","primary25","primary","spacing","controlHeight","menuGlutter","provided","fontSize","border","fontFamily","control","minHeight","option","isSearchable","autoFocus","placeholder","onChange","qs","require","BASE_API_URL","ENDPOINTS","HOSPITALS","USERS","LOGIN","VOTE","PRODUCTS","PROVINCES","USER_PHARMACY","PHARMACY_STOCK","PHARMACIES","getProducts","a","async","fetch","method","headers","getRequestsHeaders","then","requestToJson","getProvinces","getPharmacies","queryParams","query","stringify","token","Authorization","undefined","res","json","response","error","Error","createContext","user","email","hospitalId","setUser","logout","useLogin","useContext","LoginContext","STATUS_PALETTE","ICONS","mask","handSanitizer","gloves","StockBar","useState","pharmacy","setPharmacy","products","setProducts","reportStock","product","hasStock","some","p","id","productId","stock","payload","fetchOptions","body","JSON","updatePharmacyStock","catch","e","Alert","alert","String","useEffect","data","itemsContainer","idx","key","productButton","backgroundColor","photo","Image","productButtonImg","source","accessibilityLabel","Text","productButtonText","stats","lastUpdate","time","Date","constructor","getTime","time_formats","seconds","list_choice","Math","abs","format","i","floor","timeAgo","updatedAt","display","flexDirection","justifyContent","padding","flexWrap","alignItems","marginRight","marginBottom","color","width","tabText","tabSlider","flex","paddingHorizontal","textAlign","capacity","textTransform","capacityValue","capacityLabel","CALLOUT_MAXWIDTH","round","Dimensions","get","MapScreen","navigation","provinceItems","setProvinceItems","loading","setLoading","pharmacies","setPharmacies","city","setCity","setLocation","currentProduct","setCurrentProduct","mapRef","useRef","isLoggedIn","Boolean","showStatusBar","pinColor","console","areas","provider","showsUserLocation","showsMyLocationButton","showsCompass","Location","status","warn","accuracy","BestForNavigation","location","coords","current","animateToRegion","latitudeDelta","longitudeDelta","tracksViewChanges","parseFloat","geometryLat","geometryLng","address","select","item","provincesSelector","itemStyle","dropdownItem","itemsContainerStyle","formInput","listProps","nestedScrollEnabled","loginButton","navigate","bottomBar","productsButton","bottom","index","findIndex","length","productsButtonImage","loadingContainer","ActivityIndicator","alignContent","paddingVertical","right","top","left","maxWidth","maxHeight","marginTop","borderBottomWidth","borderBottomColor","opacity","callout","imageArea","resizeMode","logoArea","textAreaStyle","productsImageCallout","KEYS","LoginScreen","setEmail","password","setPassword","formTitle","TextInput","autoCompleteType","keyboardType","textContentType","onChangeText","defaultValue","autoCapitalize","secureTextEntry","formLink","loginUser","AsyncStorage","setItem","alignSelf","textDecorationLine","borderColor","borderWidth","SignupScreen","pharmacyItems","setPharmacyItems","setName","centerCode","setCenterCode","formSubtitle","searchInput","disabled","validate","pharmacyId","createPharmacyUser","text","cancelable","Stack","createStackNavigator","App","getItem","parse","DefaultTheme","background","card","Provider","removeItem","NavigationContainer","Navigator","Screen","component","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.759c7bbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/faceMask.20888871.png\";","module.exports = __webpack_public_path__ + \"static/media/handSanitizer.ce9c49cf.png\";","module.exports = __webpack_public_path__ + \"static/media/gloves.2767eaf0.png\";","import React, { Component } from \"react\";\nimport { Marker } from \"react-google-maps\";\n\nclass MapViewMarker extends Component {\n  render() {\n    const { description, title, coordinate, ...rest } = this.props;\n    return (\n      <Marker\n        {...rest}\n        title={description ? `${title}\\n${description}` : title}\n        position={{ lat: coordinate.latitude, lng: coordinate.longitude }}\n      />\n    );\n  }\n}\n\nexport default MapViewMarker;\n","import React, { Component } from \"react\";\nimport { Polyline } from \"react-google-maps\";\n\nclass MapViewPolyline extends Component {\n  render() {\n    return <Polyline {...this.props} />;\n  }\n}\n\nexport default MapViewPolyline;\n","import React, { Component } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { InfoWindow } from 'react-google-maps';\n\nclass MapViewCallout extends Component {\n  render() {\n    const { onPress, ...rest } = this.props;\n    return (\n      <TouchableOpacity onPress={onPress}>\n        <InfoWindow onCloseClick={this.props.hideCallout} {...rest}>\n          {this.props.children}\n        </InfoWindow>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default MapViewCallout;","import React, { Component } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport Marker from \"./Marker\";\nimport Polyline from \"./Polyline\";\nimport Callout from \"./Callout\";\n\nconst GoogleMapContainer = withGoogleMap((props) => (\n  <GoogleMap {...props} ref={props.handleMapMounted} />\n));\n\nclass MapView extends Component {\n  state = {\n    center: null,\n  };\n\n  handleMapMounted = (map) => {\n    this.map = map;\n    this.props.onMapReady && this.props.onMapReady();\n  };\n\n  animateToRegion(coordinates) {\n    this.setState({\n      center: { lat: coordinates.latitude, lng: coordinates.longitude },\n    });\n  }\n\n  onDragEnd = () => {\n    const { onRegionChangeComplete } = this.props;\n    if (this.map && onRegionChangeComplete) {\n      const center = this.map.getCenter();\n      onRegionChangeComplete({\n        latitude: center.lat(),\n        longitude: center.lng(),\n      });\n    }\n  };\n\n  render() {\n    const {\n      region,\n      initialRegion,\n      onRegionChange,\n      onPress,\n      options,\n    } = this.props;\n    const { center } = this.state;\n    const style = this.props.style || styles.container;\n\n    const centerProps = region\n      ? {\n          center: {\n            lat: region.latitude,\n            lng: region.longitude,\n          },\n        }\n      : center\n      ? { center }\n      : {\n          defaultCenter: {\n            lat: initialRegion && initialRegion.latitude,\n            lng: initialRegion && initialRegion.longitude,\n          },\n        };\n\n    return (\n      <View style={style}>\n        <GoogleMapContainer\n          handleMapMounted={this.handleMapMounted}\n          containerElement={<div style={{ height: \"100%\" }} />}\n          mapElement={<div style={{ height: \"100%\" }} />}\n          {...centerProps}\n          onDragStart={onRegionChange}\n          onIdle={this.onDragEnd}\n          defaultZoom={15}\n          onClick={onPress}\n          options={{\n            fullscreenControl: false,\n            mapTypeControl: false,\n            zoomControlOptions: {\n              position: google.maps.ControlPosition.LEFT_BOTTOM\n          },\n            ...options\n          }}\n        >\n          {this.props.children}\n        </GoogleMapContainer>\n      </View>\n    );\n  }\n}\n\nMapView.Marker = Marker;\nMapView.Polyline = Polyline;\nMapView.Callout = Callout;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n  },\n});\n\nexport default MapView;\nexport {default as Marker} from './Marker';\nexport {default as Polyline} from './Polyline';\nexport {default as Callout} from './Callout';","import React from \"react\";\nimport { Select } from \"react-select-virtualized\";\nimport { View } from \"react-native\";\n\nexport default function SearchableDropdown({\n  containerStyle,\n  items,\n  onItemSelect,\n  textInputProps,\n}) {\n  const options = items.map(({ name, value }) => ({ label: name, value }));\n\n  return (\n    <View style={[containerStyle, { overflow: \"visible\" }]}>\n      <Select\n        isClearable={false}\n        optionHeight={36}\n        theme={(theme) => {\n          return {\n            ...theme,\n            borderRadius: 5,\n            colors: {\n              ...theme.colors,\n              primary25: \"#4C9AFF\",\n              primary: \"#4C9AFF\",\n            },\n            spacing: {\n              ...theme.spacing,\n              controlHeight: 32,\n              menuGlutter: 0,\n            },\n          };\n        }}\n        styles={{\n          container: (provided, state) => ({\n            ...provided,\n            fontSize: 12,\n            border: \"none\",\n            fontFamily: `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Ubuntu, \"Helvetica Neue\", sans-serif`,\n          }),\n          control: (provided, state) => ({\n            ...provided,\n            border: \"none\",\n            minHeight: \"36px\",\n          }),\n          option: (provided, state) => ({\n            ...provided,\n          }),\n        }}\n        isSearchable\n        autoFocus\n        name=\"city\"\n        placeholder={textInputProps && textInputProps.placeholder}\n        options={options}\n        onChange={({ label, value }) => onItemSelect({ name: label, value })}\n      />\n    </View>\n  );\n}\n","const qs = require(\"qs\");\n// export const BASE_API_URL = \"http://192.168.1.51:3000\";\n//export const BASE_API_URL = 'http://192.168.1.42:3000';\n// export const BASE_API_URL = \"http://localhost:3000\";\nexport const BASE_API_URL = \"https://covid-19-hospital-finder.herokuapp.com\";\n\nexport const ENDPOINTS = {\n  HOSPITALS: `${BASE_API_URL}/hospitals`,\n  USERS: `${BASE_API_URL}/users`,\n  LOGIN: `${BASE_API_URL}/login`,\n  VOTE: `${BASE_API_URL}/score`,\n  PRODUCTS: `${BASE_API_URL}/products`,\n  PROVINCES: `${BASE_API_URL}/provinces/areas`,\n  USER_PHARMACY: `${BASE_API_URL}/user/pharmacy`,\n  PHARMACY_STOCK: `${BASE_API_URL}/user/pharmacy/stock`,\n  PHARMACIES: `${BASE_API_URL}/pharmacies`,\n};\n\nexport async function getProducts() {\n  return fetch(ENDPOINTS.PRODUCTS, {\n    method: 'GET',\n    headers: getRequestsHeaders(),\n  }).then(requestToJson);\n}\n\nexport async function getProvinces() {\n  return fetch(ENDPOINTS.PROVINCES, {\n    method: \"GET\",\n    headers: getRequestsHeaders(),\n  }).then(requestToJson);\n}\n\nexport async function getPharmacies(queryParams) {\n  const query = qs.stringify(queryParams);\n\n  return fetch(`${ENDPOINTS.PHARMACIES}?${query}`, {\n    method: 'GET',\n    headers: getRequestsHeaders(),\n  }).then(requestToJson);\n}\n\nexport async function getHospitals() {\n  return fetch(ENDPOINTS.HOSPITALS, {\n    method: 'GET',\n    headers: getRequestsHeaders(),\n  }).then(requestToJson);\n}\n\nexport async function getPharmacy(token) {\n  return fetch(ENDPOINTS.USER_PHARMACY, {\n    method: 'GET',\n    headers: getRequestsHeaders(token),\n  }).then(requestToJson);\n}\n\nexport async function updatePharmacyStock(token, productId, stock) {\n  const payload = {\n    productId,\n    stock,\n  };\n  const fetchOptions = {\n    method: 'PUT',\n    headers: getRequestsHeaders(token),\n    body: JSON.stringify(payload),\n  };\n\n  return fetch(ENDPOINTS.PHARMACY_STOCK, fetchOptions).then(requestToJson);\n}\n\nexport async function getHospital(id) {\n  return fetch(`${ENDPOINTS.HOSPITALS}/${id}`, {\n    method: 'GET',\n    headers: getRequestsHeaders(),\n  }).then(requestToJson);\n}\n\nexport async function createUser(user) {\n  const payload = {\n    name: user.name,\n    email: user.email,\n    password: user.password,\n    role: user.role,\n    hospitalId: user.hospitalId,\n  };\n\n  return fetch(ENDPOINTS.USERS, {\n    method: 'POST',\n    headers: getRequestsHeaders(),\n    body: JSON.stringify(payload),\n  }).then(requestToJson);\n}\n\nexport async function createPharmacyUser(user) {\n  const payload = {\n    name: user.name,\n    email: user.email,\n    password: user.password,\n    centerCode: user.centerCode,\n    pharmacyId: user.pharmacyId,\n  };\n\n  return fetch(ENDPOINTS.USER_PHARMACY, {\n    method: 'POST',\n    headers: getRequestsHeaders(),\n    body: JSON.stringify(payload),\n  }).then(requestToJson);\n}\n\nexport async function login(user, password) {\n  const payload = {\n    email: user,\n    password: password,\n  };\n  const fetchOptions = {\n    method: 'POST',\n    headers: getRequestsHeaders(),\n    body: JSON.stringify(payload),\n  };\n\n  return fetch(ENDPOINTS.LOGIN, fetchOptions).then((data) => {\n    return data.json();\n  });\n}\n\nexport async function vote(user, score) {\n  const payload = {\n    hospitalId: user.hospitalId,\n    userId: user.id,\n    score,\n  };\n  const fetchOptions = {\n    method: 'POST',\n    headers: getRequestsHeaders(user.token),\n    body: JSON.stringify(payload),\n  };\n\n  return fetch(ENDPOINTS.VOTE, fetchOptions).then(requestToJson);\n}\n\nexport function getRequestsHeaders(token = null) {\n  return {\n    'Content-Type': 'application/json',\n    Authorization: token ? `Bearer ${token}` : undefined,\n  };\n}\n\nexport async function requestToJson(res) {\n  const response = await res.json();\n  if (response.error) {\n    throw Error(response.error);\n  }\n  return response;\n}\n","import { createContext } from 'react';\nimport { AsyncStorage } from 'react-native';\nimport { KEYS } from '../storage';\n\nconst defaultUser = { email: '', name: '', hospitalId: 0 };\n\nexport default createContext({\n  user: defaultUser,\n  setUser: (user) => user,\n  logout: () => null,\n});\n","import { useContext } from \"react\";\nimport LoginContext from \"../context/LoginContext\";\n\nfunction useLogin() {\n  return useContext(LoginContext);\n}\n\nexport default useLogin;\n","export const STATUS_PALETTE = [\n  \"#cc3232\",\n  \"#db7b2b\",\n  \"#e7b416\",\n  \"#99c140\",\n  \"#2dc937\",\n];\n\nexport const STATUS_EMOJIS = [\n  \"weary\",\n  \"slightly_frowning_face\",\n  \"neutral_face\",\n  \"slightly_smiling_face\",\n  \"grin\",\n];\n\nexport const STATUS_MARKER_PALETTE = [\n    \"red\", \"orange\", \"gold\", \"yellow\", \"green\"\n]","import mask from \"../assets/icons/faceMask.png\";\nimport handSanitizer from \"../assets/icons/handSanitizer.png\";\nimport gloves from \"../assets/icons/gloves.png\";\n\nexport const ICONS = {\n  mask,\n  handSanitizer,\n  gloves\n};\n","import \"react-native-gesture-handler\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Text,\n  Image,\n  Alert,\n} from \"react-native\";\nimport { updatePharmacyStock, getPharmacy, getProducts } from \"../api\";\nimport useLogin from \"../hooks/useLogin\";\nimport { STATUS_PALETTE } from \"../styles/palette\";\nimport { ICONS } from \"../styles/icons\";\nimport { timeAgo } from \"./utils\";\n\nexport default function StockBar({ style }) {\n  const { user } = useLogin();\n  const [pharmacy, setPharmacy] = useState(null);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    getPharmacy(user.token).then((data) => {\n      setPharmacy(data);\n    });\n    getProducts().then(setProducts);\n  }, []);\n\n  function reportStock(product) {\n    const hasStock = pharmacy.products.some((p) => p.id === product.id);\n\n    updatePharmacyStock(user.token, product.id, !hasStock)\n      .then(setPharmacy)\n      .catch((e) => Alert.alert(\"Error actualizando el stock\", String(e)));\n  }\n\n  function renderProducts() {\n    return products.map((product, idx) => {\n      const hasStock = pharmacy.products.some((p) => p.id === product.id);\n      return (\n        <TouchableOpacity\n          key={product.id}\n          onPress={() => reportStock(product)}\n          style={[\n            styles.productButton,\n            {\n              backgroundColor: hasStock ? STATUS_PALETTE[4] : STATUS_PALETTE[0],\n            },\n          ]}\n        >\n          {ICONS[product.photo] ? (\n            <Image\n              style={styles.productButtonImg}\n              source={ICONS[product.photo]}\n              accessibilityLabel={product.name}\n            />\n          ) : (\n            <Text style={styles.productButtonText}>{product.name}</Text>\n          )}\n        </TouchableOpacity>\n      );\n    });\n  }\n\n  function renderStats() {\n    return (\n      <View style={styles.stats}>\n        <Text style={styles.lastUpdate}>{`Actualizaste el inventario ${timeAgo(\n          new Date(pharmacy.updatedAt)\n        )}`}</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={styles.itemsContainer}>{pharmacy && renderProducts()}</View>\n      {pharmacy && renderStats()}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n  },\n  itemsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"50%\",\n    justifyContent: \"space-between\",\n    padding: 16,\n    flexWrap: \"wrap\",\n  },\n  productButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginRight: 4,\n    marginBottom: 4,\n    padding: 8,\n  },\n  productButtonText: {\n    color: \"white\",\n  },\n  productButtonImg: {\n    width: 48,\n    height: 48,\n  },\n  tabText: {\n    fontSize: 24,\n  },\n  tabSlider: {\n    padding: 8,\n  },\n  stats: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: 8,\n    alignItems: \"center\",\n  },\n  lastUpdate: {\n    flex: 1,\n    paddingHorizontal: 16,\n    width: \"50%\",\n    textAlign: \"right\",\n    color: \"gray\",\n    fontSize: 12,\n  },\n  capacity: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    flex: 1,\n    textTransform: \"uppercase\",\n    width: \"50%\",\n    textAlign: \"center\",\n    fontSize: 40,\n  },\n  capacityValue: {\n    fontSize: 40,\n    marginRight: 8,\n  },\n  capacityLabel: {\n    fontSize: 12,\n  },\n});\n","export function timeAgo(time) {\n  switch (typeof time) {\n    case \"number\":\n      break;\n    case \"string\":\n      time = +new Date(time);\n      break;\n    case \"object\":\n      if (time.constructor === Date) time = time.getTime();\n      break;\n    default:\n      time = +new Date();\n  }\n  const time_formats = [\n    [60, \"segundos\", 1], // 60\n    [120, \"minuto\", 60], // 60*2\n    [3600, \"minutos\", 60], // 60*60, 60\n    [7200, \"hora\", 3600], // 60*60*2\n    [86400, \"horas\", 3600], // 60*60*24, 60*60\n    [172800, \"ayer\", \"hoy\"], // 60*60*24*2\n    [604800, \"dias\", 86400], // 60*60*24*7, 60*60*24\n    [1209600, \"última semana\", \"próxima semana\"], // 60*60*24*7*4*2\n    [2419200, \"semanas\", 604800], // 60*60*24*7*4, 60*60*24*7\n    [4838400, \"último mes\", \"próximo mes\"], // 60*60*24*7*4*2\n    [29030400, \"meses\", 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n    [58060800, \"último año\", \"próximo year\"], // 60*60*24*7*4*12*2\n    [2903040000, \"años\", 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n    [5806080000, \"último centenario\", \"próximo centenario\"], // 60*60*24*7*4*12*100*2\n    [58060800000, \"centenarios\", 2903040000], // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n  ];\n  let seconds = (+new Date() - time) / 1000,\n    token = \"hace \",\n    list_choice = 1;\n\n  if (seconds < 1) {\n    return \"justo ahora\";\n  }\n  if (seconds < 0) {\n    seconds = Math.abs(seconds);\n    token = \"siguientes\";\n    list_choice = 2;\n  }\n  let i = 0,\n    format;\n  while ((format = time_formats[i++]))\n    if (seconds < format[0]) {\n      if (typeof format[2] == \"string\") return format[list_choice];\n      else\n        return token + Math.floor(seconds / format[2]) + \" \" + format[1] + \" \";\n    }\n  return time;\n}\n","import 'react-native-gesture-handler';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Text,\n  ActivityIndicator,\n  Image,\n  Dimensions,\n} from 'react-native';\nimport * as Location from 'expo-location';\nimport MapView, { Marker, Callout, CalloutSubview } from 'react-native-maps';\nimport SearchableDropdown from 'react-native-searchable-dropdown';\nimport { getPharmacies, getProvinces, getProducts } from '../api';\nimport useLogin from '../hooks/useLogin';\nimport StockBar from './StockBar';\nimport { ICONS } from '../styles/icons';\nimport { STATUS_PALETTE } from '../styles/palette';\nimport { Linking } from 'expo';\n\nconst DEFAULT_LATITUDE_DELTA = 0.026006060443698686;\nconst DEFAULT_LONGITUDE_DELTA = 0.017766952514648438;\nconst WIDTH = Math.round(Dimensions.get('window').width);\nconst CALLOUT_MAXWIDTH = 0.5 * WIDTH;\n\nexport default function MapScreen({ navigation }) {\n  const [provinceItems, setProvinceItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pharmacies, setPharmacies] = useState([]);\n  const [city, setCity] = useState();\n  const [location, setLocation] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [currentProduct, setCurrentProduct] = useState(null);\n  const { user, logout } = useLogin();\n  const mapRef = useRef(null);\n  const isLoggedIn = Boolean(user && user.email);\n  const showStatusBar = isLoggedIn;\n\n  async function moveToLocation() {\n    const { status } = await Location.requestPermissionsAsync();\n    if (status !== 'granted') {\n      console.warn('Permission to access location was denied');\n    }\n\n    const location = await Location.getCurrentPositionAsync({\n      accuracy: Location.Accuracy.BestForNavigation,\n    });\n    setLocation(location.coords);\n    mapRef.current.animateToRegion({\n      latitude: location.coords.latitude,\n      latitudeDelta: DEFAULT_LATITUDE_DELTA,\n      longitude: location.coords.longitude,\n      longitudeDelta: DEFAULT_LONGITUDE_DELTA,\n    });\n  }\n\n  const handleGMapsLink = (url) => {\n    setLoading(true)\n    Linking.canOpenURL(url).then((supported)=>{\n      if (supported) {\n         Linking.openURL(url).then(()=>setLoading(false));\n      }\n    });\n  };\n\n  function generateGMapsURL(pharmacy){\n    return encodeURI(`https://www.google.com/maps/search/?api=1&query=${pharmacy.address},${pharmacy.areas}`);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getProvinces()\n      .then((data) => {\n        const items = data.map((city) => ({\n          value: city,\n          name: city,\n        }));\n        setProvinceItems(items);\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.error(e);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (city) {\n      setLoading(true);\n      getPharmacies({ areas: city })\n        .then((data) => {\n          setPharmacies(data);\n          setLoading(false);\n        })\n        .catch((e) => {\n          console.error(e);\n          setLoading(false);\n        });\n    }\n  }, [city]);\n\n  useEffect(() => {\n    setLoading(true);\n    getProducts().then((products) => {\n      setProducts(products);\n      setCurrentProduct(products[0]);\n      setLoading(false);\n    });\n  }, []);\n\n  function handleProductsButtonClick() {\n    const index = products.findIndex((product) => {\n      return product.id === currentProduct.id;\n    });\n    if (index === products.length - 1) {\n      setCurrentProduct(products[0]);\n    } else {\n      setCurrentProduct(products[index + 1]);\n    }\n  }\n\n  function renderLogin() {\n    return isLoggedIn ? (\n      <TouchableOpacity style={styles.loginButton} onPress={logout}>\n        <Text>Cerrar sesión</Text>\n      </TouchableOpacity>\n    ) : (\n      <TouchableOpacity\n        style={styles.loginButton}\n        onPress={() => navigation.navigate('Login')}\n      >\n        <Text>Entrar</Text>\n      </TouchableOpacity>\n    );\n  }\n\n  function pinColor(pharmacy) {\n    const hasStock = pharmacy.products.some((product) => {\n      return product.id === currentProduct.id;\n    });\n    return hasStock ? 'green' : 'red';\n  }\n\n  function isProductAvailable(pharmacy, item) {\n    const productIds = pharmacy.products.map((product) => product.id);\n    return productIds && productIds.some((id) => id === item.id);\n  }\n\n  return (\n    <View style={styles.container}>\n      <MapView\n        ref={mapRef}\n        style={[styles.map, { height: showStatusBar ? '80%' : '100%' }]}\n        provider={'google'}\n        showsUserLocation\n        showsMyLocationButton\n        showsCompass\n        onMapReady={moveToLocation}\n      >\n        {pharmacies.map((pharmacy) => {\n          return (\n            <Marker\n              key={pharmacy.id}\n              tracksViewChanges={false}\n              coordinate={{\n                latitude: parseFloat(pharmacy.geometryLat),\n                longitude: parseFloat(pharmacy.geometryLng),\n              }}\n              title={pharmacy.name}\n              description={pharmacy.address}\n              pinColor={pinColor(pharmacy)}\n            >\n              {/* <Callout onPress={() => handleGMapsLink(generateGMapsURL(pharmacy))}>\n                <View style={styles.callout}>\n                  <View style={styles.imageArea}>\n                    {products.map((product) => {\n                      return (\n                        <View\n                          key={product.id}\n                          style={[\n                            styles.logoArea,\n                            {\n                              backgroundColor: isProductAvailable(\n                                pharmacy,\n                                product\n                              )\n                                ? STATUS_PALETTE[4]\n                                : STATUS_PALETTE[0],\n                            },\n                          ]}\n                        >\n                          <Image\n                            key={product.id}\n                            source={ICONS[product.photo]}\n                            style={styles.productsImageCallout}\n                          />\n                        </View>\n                      );\n                    })}\n                  </View>\n                  <View style={styles.textAreaStyle}>\n                    <Text style={{textTransform:'capitalize'}}>{`Farmacia ${pharmacy.name}`}</Text>\n                    <Text style={{color:'blue'}}>Cómo llegar</Text>\n                  </View>\n                </View>\n              </Callout> */}\n            </Marker>\n          );\n        })}\n      </MapView>\n      <SearchableDropdown\n        select\n        onItemSelect={(item) => setCity(item.value)}\n        containerStyle={styles.provincesSelector}\n        itemStyle={styles.dropdownItem}\n        itemsContainerStyle={styles.itemsContainer}\n        items={provinceItems}\n        textInputProps={{\n          placeholder: 'Selecciona tu ciudad',\n          style: styles.formInput,\n        }}\n        listProps={{\n          nestedScrollEnabled: true,\n        }}\n      />\n      {renderLogin()}\n      {showStatusBar && <StockBar style={styles.bottomBar} />}\n      <TouchableOpacity\n        style={[\n          styles.productsButton,\n          { bottom: !showStatusBar ? styles.productsButton.bottom : '30%' },\n        ]}\n        onPress={handleProductsButtonClick}\n      >\n        {currentProduct && (\n          <Image\n            source={ICONS[currentProduct.photo]}\n            style={styles.productsButtonImage}\n          />\n        )}\n      </TouchableOpacity>\n      {loading && (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator />\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    height: '100%',\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: '#F5F5F5',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  map: {\n    width: '100%',\n    height: '100%',\n  },\n  loginButton: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    alignContent: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    right: 24,\n    top: 24,\n    height: 36\n  },\n  provincesSelector: {\n    position: \"absolute\",\n    left: 22,\n    top: 24,\n    width: 200,\n    maxWidth: 250,\n    maxHeight: 400,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    overflow: \"hidden\",\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: 'transparent',\n  },\n  itemsContainer: {\n    maxHeight: 140,\n    borderRadius: 10,\n  },\n  formInput: {\n    width: '100%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  bottomBar: {\n    height: '20%',\n    maxHeight: '20%',\n    overflow: 'hidden',\n    width: '100%',\n  },\n  loadingContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    opacity: 0.5,\n  },\n  productsButton: {\n    position: \"absolute\",\n    bottom: 20,\n    right: \"3%\",\n    backgroundColor: \"rgb(0, 150, 135)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    borderRadius: 50,\n    padding: 4,\n  },\n  productsButtonImage: {\n    width: 48,\n    height: 48,\n  },\n  callout: {\n    padding: 4,\n    display: 'flex',\n    justifyContent: 'center',\n    maxWidth: CALLOUT_MAXWIDTH,\n  },\n  imageArea: {\n    display: 'flex',\n    flexDirection: 'row',\n    resizeMode: 'cover',\n    justifyContent: 'center',\n    padding: 4,\n  },\n  logoArea: {\n    borderRadius: 50,\n    padding: 4,\n    marginRight: 4\n  },\n  textAreaStyle: {\n    padding: 4,\n    marginBottom: 6,\n  },\n  productsImageCallout:{\n    width: 32,\n    height: 32,\n  }\n});\n","export const KEYS = {\n  USER: \"user\",\n};\n","import \"react-native-gesture-handler\";\nimport React, { useState } from \"react\";\nimport {\n  AsyncStorage,\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Text,\n  TextInput,\n  Alert,\n} from \"react-native\";\nimport { login as loginUser } from \"../api\";\nimport { KEYS } from \"../storage\";\nimport useLogin from \"../hooks/useLogin\";\n\nexport default function LoginScreen({ navigation }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setUser } = useLogin();\n\n  function login() {\n    loginUser(email, password)\n      .then((user) =>\n        AsyncStorage.setItem(KEYS.USER, JSON.stringify(user)).then(() => user)\n      )\n      .then((user) => {\n        if (user && user.token) {\n          Alert.alert(\n            `Hola de nuevo, ${user.name}`,\n            ` Nunca podremos agradecer suficiente lo que estás haciendo durante esta crisis por nosotros. \\n\\n ¡Venceremos al virus!`\n          );\n          setUser(user);\n          navigation.navigate(\"Inicio\");\n        } else {\n          throw new Error(\n            `The token is missing in the user information ${JSON.stringify(\n              user\n            )}`\n          );\n        }\n      })\n      .catch((e) => {\n        console.warn(e);\n        Alert.alert(\n          `Fallo al iniciar sesión`,\n          `Los credenciales son erróneos o el usuario está pendiente de validación`\n        );\n      });\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.formTitle}>Acceso a personal de farmacia</Text>\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Email\"\n        autoCompleteType=\"email\"\n        keyboardType=\"email-address\"\n        textContentType=\"emailAddress\"\n        onChangeText={(email) => setEmail(email)}\n        defaultValue={email}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Contraseña\"\n        autoCompleteType=\"password\"\n        textContentType=\"password\"\n        secureTextEntry\n        onChangeText={(password) => setPassword(password)}\n        defaultValue={password}\n        autoCapitalize=\"none\"\n      />\n      <Text\n        style={styles.formLink}\n        onPress={() => navigation.navigate(\"Registro\")}\n      >\n        Tengo una farmacia y no tengo cuenta, ¿Cómo me registro?\n      </Text>\n      <TouchableOpacity style={styles.loginButton} onPress={login}>\n        <Text>Login</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: \"relative\",\n    display: \"flex\",\n    alignSelf: \"center\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5F5F5\",\n    paddingHorizontal: 48,\n  },\n  formTitle: {\n    fontSize: 24,\n    marginBottom: 32,\n  },\n  formInput: {\n    width: \"100%\",\n    height: 48,\n    marginBottom: 16,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  formLink: {\n    textDecorationLine: \"underline\",\n    marginBottom: 16,\n  },\n  loginButton: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    borderColor: \"#F5F5F5\",\n    borderWidth: 1,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n","import \"react-native-gesture-handler\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Text,\n  TextInput,\n  Alert,\n} from \"react-native\";\nimport SearchableDropdown from \"react-native-searchable-dropdown\";\nimport { getProvinces, createPharmacyUser, getPharmacies } from \"../api\";\n\nexport default function SignupScreen({ navigation }) {\n  const [provinceItems, setProvinceItems] = useState([]);\n  const [pharmacyItems, setPharmacyItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [city, setCity] = useState(null);\n  const [pharmacy, setPharmacy] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [centerCode, setCenterCode] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    getProvinces()\n      .then((data) => {\n        const items = data.map((city) => ({\n          value: city,\n          name: city,\n        }));\n        setProvinceItems(items);\n        setLoading(false);\n      })\n      .catch((e) => {\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (city) {\n      setLoading(true);\n      getPharmacies({ areas: city })\n        .then((data) => {\n          const items = data.map((pharmacy) => ({\n            value: pharmacy.id,\n            name: pharmacy.name,\n          }));\n          setPharmacyItems(items);\n          setLoading(false);\n        })\n        .catch((e) => {\n          setLoading(false);\n        });\n    }\n  }, [city]);\n\n  function validate() {\n    if (!pharmacy) {\n      Alert.alert(\n        \"Los datos no son válidos\",\n        \"Por favor, selecciona tu farmacia\"\n      );\n      return;\n    }\n    if (!centerCode) {\n      Alert.alert(\n        \"Los datos no son válidos\",\n        \"Por favor, introduce el código autonómico de la farmacia\"\n      );\n      return;\n    }\n    if (!name) {\n      Alert.alert(\n        \"Los datos no son validos\",\n        \"Por favor, introduce tu nombre y tus apellidos\"\n      );\n      return;\n    }\n    if (!email) {\n      Alert.alert(\"Los datos no son válidos\", \"Por favor, introduce un email\");\n      return;\n    }\n    if (!password) {\n      Alert.alert(\n        \"Los datos no son válidos\",\n        \"Por favor, introduce una contraseña\"\n      );\n      return;\n    }\n    return true;\n  }\n  function submitUser() {\n    if (!validate()) {\n      return;\n    }\n    createPharmacyUser({\n      name,\n      email,\n      password,\n      centerCode,\n      pharmacyId: pharmacy,\n    })\n      .then((user) => {\n        Alert.alert(\n          \"Enviado correctamente\",\n          `Gracias ${user.name}. Ya puedes iniciar sesión y actualizar el inventario de tu farmacia.`,\n          [\n            {\n              text: \"Aceptar\",\n              onPress: () => {\n                navigation.navigate(\"Login\");\n              },\n            },\n          ],\n          { cancelable: false }\n        );\n      })\n      .catch((e) => {\n        Alert.alert(\"Ha ocurrido un error\", String(e));\n      });\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.formTitle}>\n        Pedir acceso como personal de farmacia\n      </Text>\n      <Text style={styles.formSubtitle}>\n        Por el momento, solo personal del un usuario por farmacia podrá informar\n        del inventario de productos.\n      </Text>\n      <SearchableDropdown\n        select\n        onItemSelect={(item) => {\n          setCity(item.value);\n        }}\n        containerStyle={styles.searchInput}\n        itemStyle={styles.dropdownItem}\n        itemsContainerStyle={styles.itemsContainer}\n        items={provinceItems}\n        textInputProps={{\n          placeholder: loading ? \"Cargando...\" : \"Selecciona una ciudad\",\n          style: styles.formInput,\n        }}\n        listProps={{\n          nestedScrollEnabled: true,\n        }}\n      />\n      <SearchableDropdown\n        select\n        disabled={!city}\n        onItemSelect={(item) => {\n          setPharmacy(item.value);\n        }}\n        containerStyle={styles.searchInput}\n        itemStyle={styles.dropdownItem}\n        itemsContainerStyle={styles.itemsContainer}\n        items={pharmacyItems}\n        textInputProps={{\n          placeholder: loading ? \"Cargando...\" : \"Selecciona tu farmacia\",\n          style: styles.formInput,\n        }}\n        listProps={{\n          nestedScrollEnabled: true,\n        }}\n      />\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Código Autonómico Ej: F08006281\"\n        onChangeText={setCenterCode}\n        defaultValue={centerCode}\n      />\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Nombre y Apellidos\"\n        autoCompleteType=\"name\"\n        onChangeText={setName}\n        defaultValue={name}\n      />\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Email\"\n        autoCompleteType=\"email\"\n        keyboardType=\"email-address\"\n        textContentType=\"emailAddress\"\n        onChangeText={setEmail}\n        defaultValue={email}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        style={styles.formInput}\n        placeholder=\"Contraseña\"\n        autoCompleteType=\"password\"\n        textContentType=\"password\"\n        secureTextEntry\n        onChangeText={setPassword}\n        defaultValue={password}\n        autoCapitalize=\"none\"\n      />\n      <TouchableOpacity style={styles.loginButton} onPress={submitUser}>\n        <Text>Pedir acceso</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: \"relative\",\n    display:\"flex\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    padding: 48,\n    maxWidth: 600,\n  },\n  formTitle: {\n    fontSize: 24,\n    marginBottom: 24,\n  },\n  formSubtitle: {\n    marginBottom: 16,\n  },\n  formInput: {\n    height: 48,\n    width: \"100%\",\n    marginBottom: 16,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  searchInput: {\n    width: \"100%\",\n  },\n  dropdownItem: {\n    padding: 10,\n    marginTop: 2,\n    backgroundColor: \"white\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"transparent\",\n  },\n  itemsContainer: {\n    maxHeight: 140,\n    marginTop: -14,\n    marginBottom: 8,\n    borderRadius: 10,\n  },\n  formLink: {\n    textDecorationLine: \"underline\",\n  },\n  loginButton: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    borderColor: \"#F5F5F5\",\n    borderWidth: 1,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n","import \"react-native-gesture-handler\";\nimport React, { useState, useEffect } from \"react\";\nimport { AsyncStorage, View } from \"react-native\";\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport { MapScreen, LoginScreen, SignupScreen } from \"./components\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { KEYS } from \"./storage\";\nimport LoginContext from \"./context/LoginContext\";\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [user, setUser] = useState({ email: \"\", name: \"\", hospitalId: 0 });\n\n  useEffect(() => {\n    AsyncStorage.getItem(KEYS.USER).then((value) => {\n      const user = value && JSON.parse(value);\n\n      setUser(user);\n    });\n  }, []);\n\n  function logout() {\n    AsyncStorage.removeItem(KEYS.USER).then(() =>\n      setUser({ email: \"\", name: \"\", hospitalId: 0 })\n    );\n  }\n  const theme = {\n    ...DefaultTheme,\n    colors: {\n      primary: 'rgb(255, 45, 85)',\n      background: '#F5F5F5',\n      card: 'rgb(255, 255, 255)',\n      text: 'rgb(28, 28, 30)',\n      border: 'transparent',\n    },\n  };\n  return (\n    <LoginContext.Provider value={{ user, setUser, logout }}>\n      <NavigationContainer theme={theme}>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Inicio\" component={MapScreen} />\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\n          <Stack.Screen name=\"Registro\" component={SignupScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </LoginContext.Provider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}